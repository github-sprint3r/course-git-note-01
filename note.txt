========= Introduction to git ============
﻿Start  w/ github

1. โครงสร้างโฟลเดอร์
	> โปรเจ็คเดียวกันไม่ควรแยก Repo
	> .gitignore ตั้งแต่ขึ้นตอนนี้
2. การใช้ Trunk / Branch / Tag
	> Branch ไม่ควรเกิน 3 ซึ่ง 3 ก็ถือว่าเยอะมาก
	> Tag ตรง Release
3. Merge ให้บ่อยที่สุด
	> คุยกันเวลา push โค้ดขึ้น
	> ควรจะมี Unit Test เพื่อเช็คว่ากระทบไหม
4. Commit Message แนะนำให้ดูตัวอย่างจาก Mozilla
5. ควรใช้ Repo เดียวกัน
===========================================


=========  Git reset change ==========
revert current change in current directory
$ git checkout -- .
or
$ git checkout -- *
===========================================


=========  To show each log in one line =========
$git log --oneline
===========================================


=========  Start with github.com ==========
1.Register user on www.github.com first
2.Create ssh on your computer and copy SSH keys to your github
3.Create a new respository
4.Create Repository name
5.Choose Public and click create repository
===========================================


=========== Git add ============
Git add : หลังจากสร้างไฟล์แล้วต้องใช้คำสั่ง git add ก่อนจะ git commit
================================


======= Good commit message =======
	> ขึ้นต้นด้วย verb
	> อธิบายเนื้อหาว่าทำอะไร
================================


======= git remote ================
command : git remote <action> <name remote> url

example : git remote add remote_name git@github.com:hello/hello
=============================================


==========Force commit with amend ===========
 command : git commit --amend <action>
=======================================================================================


======= Git log to filter log with date range =======
	command : git log --after="YYYY-MM-DD" --before="YYYY-MM-DD"
	example : git log --after="2015-09-12"
=============================================


======= Issue#6 - Git log to filter log with date range =======
	command : git log --after="YYYY-MM-DD" --before="YYYY-MM-DD"
	example : git log --after="2015-09-12"
===============================================================


===================== Git log to filter log with date range ============================
Git log to filter log with date range
	การแสดงการทำงาน ของการทำงาน
		ตัวอย่างการเรียกใช้งานคำสั่ง
		-> git log --oneline
		-> git log --oneline --decorate
		-> git log --oneline --decorate --graph
		-> git log --stat

		Git Log to filter log with date range
		-> git log --after="2014-7-1"
		-> get log --after="yesterday"
		-> git log --after="2014-7-1" --before="2014-7-4"
=================================================================================


===================== Force commit with amend ======================================
Force commit with amend
	การเพิ่ม commit file เข้า commit ล่าสุด
	git commit <filename> --amend
========================================================================================


===================== Git commit =======================================================
$git commit
<<<<<<< HEAD

=======
or
>>>>>>> 5a1b7e844d6c6b3fc063f9595bcd51f88f3309eb
$git commit -m “comment”
===========



=========== Git log to show in pretty and graph ===========
$git log --oneline --decorate --graph


===================== Git log to filter log with date range ============================
> git log --since="2015-09-12T16:36:00-07:00" --until="2015-09-12T20:36:00-07:00"
====================================================


===================== Integrate issue tracker with github ===============================
Add #[issue-number] into commit message
$ git commit -m '#1 [issue name]'
To close issue add 'fixed #[issue-number]'
$ git commit -m 'Fixed #1 [issue name]'
====================================================


=========== To solve conflict ===========
When there're conflict, the conflicted codes will be group like\

<<<<< HEAD
Your code line 1
Your code line 2
==========
The other code line 1
The other code line 2
>>>>>>> <commit id>

Fix it the way you think it suppose to be.
Re add the file
Re commit
Re push
Pray to god
=============================================
End  Tet Git Staging in EClipse